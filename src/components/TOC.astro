---
import type { MarkdownHeading } from 'astro'

type Props = {
  headings: MarkdownHeading[]
}

type HeadingWithSubheadings = MarkdownHeading & {
  subheadings: MarkdownHeading[]
}

const { headings } = Astro.props

const grouppedHeadings = headings.reduce((array, heading) => {
  if (heading.depth === 2) {
    array.push({ ...heading, subheadings: [] })
  } else if (heading.depth === 3) {
    array.at(-1)?.subheadings.push(heading)
  }
  return array
}, [] as HeadingWithSubheadings[])
---

<h2 class="text-xl font-bold">Table of Contents</h2>
<nav id="table-of-contents" aria-label="Table Of Contents" class="mt-4">
  <ol class="grid list-inside list-disc grid-cols-1 gap-2">
    {
      grouppedHeadings.map((h) => (
        <li>
          <a href={`#${h.slug}`} class="transition hover:text-lightBlue">
            {h.text}
          </a>
          {h.subheadings.length > 0 && (
            <ol>
              {h.subheadings.map((sub) => (
                <li>
                  <a href={`#${sub.slug}`} class="transition hover:text-lightBlue">
                    {sub.text}
                  </a>
                </li>
              ))}
            </ol>
          )}
        </li>
      ))
    }
  </ol>
</nav>
